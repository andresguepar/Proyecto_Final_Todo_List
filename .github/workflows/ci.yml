name: TodoList CI/CD

on:
  push:
    branches: "master"
  pull_request:
    branches: "master"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    
    steps:
    # Paso 1: Checkout del cÃ³digo
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Paso 2: Configurar JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    # Paso 3: Configurar Docker Compose
    - name: Set up Docker Compose
      uses: docker/setup-buildx-action@v3
    
    # Paso 4: Construir servicios de Docker Compose
    - name: Build Docker Compose Services
      run: docker-compose build --no-cache
    
    # Paso 5: Iniciar servicios
    - name: Start Services
      run: docker-compose up -d
    
    # Paso 6: Verificar estado de los servicios
    - name: Check Service Health
      run: |
        docker-compose ps
        docker-compose logs
    
    # Paso 7: Esperar a que los servicios estÃ©n listos
    - name: Wait for Services to be Ready
      run: |
        max_attempts=10
        attempt=0
        
        while [ $attempt -lt $max_attempts ]; do
          if docker-compose exec -T todolist_db pg_isready && 
             docker-compose exec -T redis redis-cli ping; then
            echo "Services are ready!"
            break
          fi
          
          attempt=$((attempt+1))
          echo "Waiting for services... (Attempt $attempt)"
          sleep 10
        done
    
    # Paso 8: Ejecutar pruebas
    - name: Run Tests
      run: |
        docker-compose run --rm todolist_test
      timeout-minutes: 10
    
    # Paso 9: Capturar logs en caso de fallo
    - name: Capture Test Logs
      if: failure()
      run: |
        docker-compose logs todolist_test
        docker-compose logs todolist_db
        docker-compose logs redis
    

    - name: Deployed!!
      if: success()
      run: echo "ðŸš€ TodoList App desplegada exitosamente en $(date)"
